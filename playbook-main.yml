# playbook-main.yml
---
- hosts: all
  become: yes

  vars:
    # --- ここで設定をカスタマイズできます ---
    admin_user: "myadmin"
    swap_file_size: "2G"

  handlers:
    - name: "Restart sshd service"
      ansible.builtin.service:
        name: sshd
        state: restarted

  tasks:
    - name: "TASK 1: Update and upgrade apt packages"
      ansible.builtin.apt:
        update_cache: yes
        upgrade: "dist"
        autoremove: yes

    - name: "TASK 2: Install essential packages"
      ansible.builtin.apt:
        name:
          - ufw
          - fail2ban
          - unattended-upgrades
          - language-pack-ja
        state: present

    - name: "TASK 3: Create a new admin user and set up SSH key"
      block:
        - name: "Create a new admin user with sudo privileges"
          ansible.builtin.user:
            name: "{{ admin_user }}"
            state: present
            groups: "sudo"
            append: yes
            shell: /bin/bash

        - name: "Set up authorized key for the new admin user"
          ansible.posix.authorized_key:
            user: "{{ admin_user }}"
            key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
            state: present
            mode: '0600'
          # 注意: このタスクは、実行するPCの `~/.ssh/id_rsa.pub` を参照します。

    - name: "TASK 4: Harden SSH configuration"
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        validate: "sshd -t -f %s"
      loop:
        - { regexp: '^#?PermitRootLogin', line: 'PermitRootLogin no' }
        - { regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication no' }
      notify: "Restart sshd service"

    - name: "TASK 5: Configure Firewall (UFW) and Fail2ban"
      block:
        - name: "Allow SSH connections on UFW"
          community.general.ufw:
            rule: allow
            name: OpenSSH
        - name: "Enable UFW"
          community.general.ufw:
            state: enabled
            policy: deny

    - name: "TASK 6: Set timezone and locale"
      block:
        - name: "Set timezone to Asia/Tokyo"
          community.general.timezone:
            name: Asia/Tokyo
        - name: "Set locale to Japanese (ja_JP.UTF-8)"
          ansible.builtin.command:
            cmd: "localectl set-locale LANG=ja_JP.UTF-8"
          changed_when: false # localectlは常時changedを返すため、手動で制御

    - name: "TASK 7: Create a swap file for stability"
      block:
        - name: "Check if swapfile exists"
          ansible.builtin.stat:
            path: /swapfile
          register: swap_file_check

        - name: "Create swapfile if it does not exist"
          ansible.builtin.command:
            cmd: "fallocate -l {{ swap_file_size }} /swapfile"
          when: not swap_file_check.stat.exists

        - name: "Set correct permissions for swapfile"
          ansible.builtin.file:
            path: /swapfile
            mode: '0600'
          when: not swap_file_check.stat.exists

        - name: "Format swapfile"
          ansible.builtin.command:
            cmd: "mkswap /swapfile"
          when: not swap_file_check.stat.exists

        - name: "Enable swapfile"
          ansible.builtin.command:
            cmd: "swapon /swapfile"
          when: not swap_file_check.stat.exists

        - name: "Add swapfile to /etc/fstab for persistence"
          ansible.builtin.lineinfile:
            path: /etc/fstab
            line: "/swapfile none swap sw 0 0"
            create: yes

    - name: "TASK 8: Configure automatic security updates"
      ansible.builtin.copy:
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        content: |
          Unattended-Upgrade::Allowed-Origins {
              "${distro_id}:${distro_codename}-security";
          };
          Unattended-Upgrade::Package-Blacklist {
          };
          Unattended-Upgrade::Automatic-Reboot "true";
          Unattended-Upgrade::Automatic-Reboot-Time "03:00";